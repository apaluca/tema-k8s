apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Configuratii pentru WebSocket support pentru chat
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "chat-backend"
spec:
  ingressClassName: nginx
  rules:
  # Drupal pe portul 80 (default)
  - host: localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: drupal
            port:
              number: 80
  # Chat frontend pe path specific
  - host: localhost
    http:
      paths:
      - path: /chat
        pathType: Prefix
        backend:
          service:
            name: chat-frontend
            port:
              number: 80
  # AI frontend pe path specific  
  - host: localhost
    http:
      paths:
      - path: /ai
        pathType: Prefix
        backend:
          service:
            name: ai-frontend
            port:
              number: 80

---
# Configuratie speciala pentru chat backend WebSocket pe portul 88
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-tcp-config
  namespace: ingress
data:
  "88": "default/chat-backend:88"

---
# Configuratie pentru expunerea AI backend API
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ai-backend
            port:
              number: 3001